@charset "utf-8";

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    font-family: "Roboto", sans-serif;
}

div.menuBar {
    width: 100vw;
    height: 100px;
    background-color: #1db82a;
    display: flex;
    justify-content: flex-start;
}

div.dropDownWrapper {
    display: inline-block;
    /* border: 1px solid black; */
    /* Top and bottom margin of 25px are necessary so that the wrapper has the same
        size as the button so that the hover pseudo class only triggers if the cursor
        is actually above the button */
    margin: 25px 0 25px 2.5vw;
    width: 10vw;
    z-index: 1;
}

/* Display the contents of the drop down menu if the user hovers of the button, but a
    button has no :hover pseudo class so the wrapper div is used */
div.dropDownWrapper:hover div.dropDownMenu {
    display: block;
}

button.dropDownButton {
    width: inherit;
    height: 50px;
    /* margin-left: 2.5vw; */
    /* margin-top: 25px; */
    background-color: #79e082;
    color: white;
    font-size: 1.2rem;
    border: 1px solid white;
    border-radius: 5px;
    padding: 0 1vw 0 1vw;
    /* cursor: pointer; */
}

div.dropDownMenu {
    display: none;
    width: inherit;
    background-color: #1db82a;
    /* width: 10vw; */
}

div.radioButtonWrapper {
    width: inherit;
    -webkit-display: inline-flex;
    display: inline-flex;
    align-items: center;
    text-align: center;
    /* border: 1px solid white; */
    padding: 0.5vw 0;
    /* cursor: pointer; */
}

div.radioButtonWrapper:hover {
    background-color: #3b423c;
}

div.radioButtonWrapper input {
    width: 0;
    visibility: hidden;
}

div.radioButtonWrapper input:checked + label {
    font-weight: bold;
}

div.radioButtonWrapper label {
    /* Label is an inline element so it's only as big as the text that it contains
        so by setting it to be the parent's width text-align can take effect */
    width: inherit;
    color: white;
    font-size: 1.2rem;
    /* text-align: center; */
    cursor: pointer;
}

/*div.dropDownMenu a {
    color: white;
    padding: 10px;
    display: block;
}*/

div.weightWrapper {
    width: 15vw;
    height: 5vh;
    background-color: inherit;
    display: inline-flex;
    /* border: 1px solid black; */
}

div.nodeColorSquare {
    width: 2vw;
    height: 4vh;
    content: "";
    border: 1px solid white;
    margin-top: 0.5vh;
    margin-left: 0.5vw;
}

input.weightSlider {
    width: 8vw;
}

div#lightWeightSquare {
    background-color: #32ccb2;
}

div#normalWeightSquare {
    background-color: #e8dd19;
}

div#heavyWeightSquare {
    background-color: #06d314;
}

input.weightSlider {
    margin-left: 1.5vw;
}

div.weightWrapper label {
    width: 3vw;
    height: inherit;
    color: white;
    font-size: 1.2rem;
    /* border: 1px solid black; */
    text-align: center;
    padding-top: 1.5vh;
}

button#animateAlgorithm,
button#clearWalls,
button#clearWeights,
button#resetBoard {
    width: 10vw;
    margin: 25px 0 25px 2.5vw;
    cursor: pointer;
}

div#board {
    display: grid;
    grid-gap: 0;
}

div.unvisited {
    background-color: white;
    border: 1px solid black;
}

div.start {
    background-color: red;
    border: 1px solid black;
}

div.finish {
    background-color: green;
    border: 1px solid black;
}

div.visited {
    /*background-color: blue;*/
    border: 1px solid black;
    animation-name: visitedAnimation;
    animation-duration: 1.5s;
    animation-fill-mode: forwards;
    animation-delay: 0s;
    animation-iteration-count: 1;
    animation-direction: normal;
    animation-timing-function: ease-out;
}

@keyframes visitedAnimation {
    0% {
        background-color: white;
        transform: scale(0.3);
        border-radius: 100%;
    }

    25% {
        background-color: turquoise;
    }

    50% {
        background-color: darkcyan;
        transform: scale(1.20);
    }

    75% {
        background-color: blue;
    }

    100% {
        background-color: darkblue;
        transform: scale(1.0);
    }
}

div.shortestPath {
    /*background-color: pink;*/
    border: 1px solid black;
    animation-name: shortestPathAnimation;
    animation-duration: 1.5s;
    animation-fill-mode: forwards;
    animation-delay: 0s;
    animation-iteration-count: 1;
    animation-direction: normal;
    animation-timing-function: ease-out;
}

@keyframes shortestPathAnimation {
    0% {
        background-color: white;
        transform: scale(0.3);
        border-radius: 100%;
    }

    25% {
        background-color: #f73bde;
    }

    50% {
        background-color: #ce1cb6;
        transform: scale(1.20);
    }

    75% {
        background-color: #dd4089;
    }

    100% {
        background-color: #c611c0;
        transform: scale(1.0);
    }
}

div.wall {
    /*background-color: orange;*/
    border: 1px solid black;
    animation-name: wallAnimation;
    animation-duration: 0.5s;
    animation-fill-mode: forwards;
    /* This delay is necessary to give the event listener for
        'mouse up' time to be registered. Otherwise a bug occurs
        where the mouse is no longer pressed, but walls will still
        be created and removed when the mouse enters nodes */
    animation-delay: 0.1s;
    animation-iteration-count: 1;
    animation-direction: normal;
    animation-timing-function: ease-out;
}

@keyframes wallAnimation {
    0% {
        background-color: white;
        transform: scale(0.3);
        border-radius: 100%;
    }

    25% {
        background-color: #daf92a;
    }

    50% {
        background-color: #f7ce16;
        transform: scale(1.20);
    }

    75% {
        background-color: #f9b12a;
    }

    100% {
        background-color: #fca62d;
        transform: scale(1.0);
    }
}

div.lightWeight {
    /*background-color: purple;*/
    border: 1px solid black;
    animation-name: lightWeightAnimation;
    animation-duration: 0.5s;
    animation-fill-mode: forwards;
    animation-delay: 0.1s;
    animation-iteration-count: 1;
    animation-direction: normal;
    animation-timing-function: ease-out;
}

@keyframes lightWeightAnimation {
    0% {
        background-color: white;
        transform: scale(0.3);
        border-radius: 100%;
    }

    25% {
        background-color: #2dfcd9;
    }

    50% {
        background-color: #07c6a7;
        transform: scale(1.20);
    }

    75% {
        background-color: #08a389;
    }

    100% {
        background-color: #32ccb2;
        transform: scale(1.0);
    }
}

div.normalWeight {
    /*background-color: cyan;*/
    border: 1px solid black;
    animation-name: normalWeightAnimation;
    animation-duration: 0.5s;
    animation-fill-mode: forwards;
    animation-delay: 0.1s;
    animation-iteration-count: 1;
    animation-direction: normal;
    animation-timing-function: ease-out;
}

@keyframes normalWeightAnimation {
    0% {
        background-color: white;
        transform: scale(0.3);
        border-radius: 100%;
    }

    25% {
        background-color: #d1c932;
    }

    50% {
        background-color: #b5ad22;
        transform: scale(1.20);
    }

    75% {
        background-color: #dbd339;
    }

    100% {
        background-color: #e8dd19;
        transform: scale(1.0);
    }
}

div.heavyWeight {
    /*background-color: lime;*/
    border: 1px solid black;
    animation-name: heavyWeightAnimation;
    animation-duration: 0.5s;
    animation-fill-mode: forwards;
    animation-delay: 0.1s;
    animation-iteration-count: 1;
    animation-direction: normal;
    animation-timing-function: ease-out;
}

@keyframes heavyWeightAnimation {
    0% {
        background-color: white;
        transform: scale(0.3);
        border-radius: 100%;
    }

    25% {
        background-color: #39db43;
    }

    50% {
        background-color: #40dd4a;
        transform: scale(1.20);
    }

    75% {
        background-color: #03b50f;
    }

    100% {
        background-color: #06d314;
        transform: scale(1.0);
    }
}